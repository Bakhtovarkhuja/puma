define(['jquery'],function($){'use strict'
return function(){$.validator.prototype.check=function(element){element=this.validationTargetFor(this.clean(element))
var rules=$(element).rules()
var dependencyMismatch=false
var val=this.elementValue(element)
var result
if(rules.validate){rules=rules.validate}
for(var method in rules){var rule={method:method,parameters:rules[method]}
try{result=$.validator.methods?.[method]?.call(this,val,element,rule.parameters)
if(result==='dependency-mismatch'){dependencyMismatch=true
continue}
dependencyMismatch=false
if(result==='pending'){this.toHide=this.toHide.not(this.errorsFor(element))
return}
if(!result){this.formatAndAdd(element,rule)
return false}}catch(e){if(this.settings.debug&&window.console){console.log('exception occurred when checking element '+
element.id+", check the '"+
rule.method+"' method",e)}
throw e}}
if(dependencyMismatch){return}
if(this.objectLength(rules)){this.successList.push(element)}
return true}}})