define(['jquery','mage/translate','underscore'],function($,$t,_){'use strict'
return function(){var creditCartTypes,rules
creditCartTypes={SO:[new RegExp('^(6334[5-9]([0-9]{11}|[0-9]{13,14}))|(6767([0-9]{12}|[0-9]{14,15}))$'),new RegExp('^([0-9]{3}|[0-9]{4})?$'),true],SM:[new RegExp('(^(5[0678])[0-9]{11,18}$)|(^(6[^05])[0-9]{11,18}$)|'+'(^(601)[^1][0-9]{9,16}$)|(^(6011)[0-9]{9,11}$)|(^(6011)[0-9]{13,16}$)|'+'(^(65)[0-9]{11,13}$)|(^(65)[0-9]{15,18}$)|(^(49030)[2-9]([0-9]{10}$|[0-9]{12,13}$))|'+'(^(49033)[5-9]([0-9]{10}$|[0-9]{12,13}$))|(^(49110)[1-2]([0-9]{10}$|[0-9]{12,13}$))|'+'(^(49117)[4-9]([0-9]{10}$|[0-9]{12,13}$))|(^(49118)[0-2]([0-9]{10}$|[0-9]{12,13}$))|'+'(^(4936)([0-9]{12}$|[0-9]{14,15}$))'),new RegExp('^([0-9]{3}|[0-9]{4})?$'),true],VI:[new RegExp('^4[0-9]{12}([0-9]{3})?$'),new RegExp('^[0-9]{3}$'),true],MC:[new RegExp('^(?:5[1-5][0-9]{2}|222[1-9]|22[3-9][0-9]|2[3-6][0-9]{2}|27[01][0-9]|2720)[0-9]{12}$'),new RegExp('^[0-9]{3}$'),true],AE:[new RegExp('^3[47][0-9]{13}$'),new RegExp('^[0-9]{4}$'),true],DI:[new RegExp('^(6011(0|[2-4]|74|7[7-9]|8[6-9]|9)|6(4[4-9]|5))\\d*$'),new RegExp('^[0-9]{3}$'),true],JCB:[new RegExp('^35(2[8-9]|[3-8])\\d*$'),new RegExp('^[0-9]{3}$'),true],DN:[new RegExp('^(3(0[0-5]|095|6|[8-9]))\\d*$'),new RegExp('^[0-9]{3}$'),true],UN:[new RegExp('^(622(1(2[6-9]|[3-9])|[3-8]|9([[0-1]|2[0-5]))|62[4-6]|628([2-8]))\\d*?$'),new RegExp('^[0-9]{3}$'),true],MI:[new RegExp('^(5(0|[6-9])|63|67(?!59|6770|6774))\\d*$'),new RegExp('^[0-9]{3}$'),true],MD:[new RegExp('^6759(?!24|38|40|6[3-9]|70|76)|676770|676774\\d*$'),new RegExp('^[0-9]{3}$'),true],MR:[new RegExp('^2[0-9]{15}$'),new RegExp('^[0-9]{3}$'),true]}
rules={'validate-card-length':[function(v,elm){var reMax=new RegExp(/^maximum-length-[0-9]+$/),reMin=new RegExp(/^minimum-length-[0-9]+$/),result=true,length=0
$.each(elm.className.split(' '),function(index,name){if(name.match(reMax)&&result){length=name.split('-')[2]
result=v.length<=length}
if(name.match(reMin)&&result){length=name.split('-')[2]
result=$.mage.isEmpty(v)||v.length>=length}})
return result},function(){return $t('Please enter a valid credit card type number.')}],'validate-cc-exp':[function(value,element,params){var isValid=false
if(value&&params){var month=value,year=$(params).val(),currentTime=new Date(),currentMonth=currentTime.getMonth()+1,currentYear=String(currentTime.getFullYear()).substr(-2)
isValid=!year||year>currentYear||(year==currentYear&&month>=currentMonth)}
return isValid},$t('Incorrect credit card expiration date.')],'validate-cc-type-select':[function(value,element,params){if(value&&params&&creditCartTypes[value]){return creditCartTypes[value][0].test($(params).val().replace(/\s+/g,''))}
return false},$t('Card type does not match credit card number.')],'validate-cc-type':[function(value,element,params){var ccType
if(value&&params){ccType=$(params).val()
value=value.replace(/\s/g,'').replace(/-/g,'')
if(creditCartTypes[ccType]&&creditCartTypes[ccType][0]){return creditCartTypes[ccType][0].test(value)}else if(creditCartTypes[ccType]&&!creditCartTypes[ccType][0]){return true}}
return false},$t('Credit card number does not match credit card type.')],'validate-cc-cvn':[function(value,element,params){var ccType
if(value&&params){ccType=$(params).val()
if(creditCartTypes[ccType]&&creditCartTypes[ccType][0]){return creditCartTypes[ccType][1].test(value)}}
return false},$t('Please enter a valid credit card verification number.')],'validate-date-ru':[function(v){var regex,d,currentDate=new Date()
if($.mage.isEmptyNoTrim(v)){return true}
regex=/^(\d{2})\.(\d{2})\.(\d{4})$/
if($.mage.isEmpty(v)||!regex.test(v)){return false}
d=new Date(v.replace(regex,'$2/$1/$3'))
if(currentDate.getFullYear()<d.getFullYear()){return false}
return(parseInt(RegExp.$1,10)===d.getDate()&&parseInt(RegExp.$2,10)===1+d.getMonth()&&parseInt(RegExp.$3,10)===d.getFullYear())},$t('Please enter a valid date.')],'validate-customer-password':[function(v,elm){var validator=this,counter=0,passwordMinLength=$(elm).data('password-min-length'),passwordMinCharacterSets=$(elm).data('password-min-character-sets'),pass=$.trim(v),result=pass.length>=passwordMinLength
if(result===false){validator.passwordErrorMessage=$t('Minimum length of this field must be equal or greater than %1 symbols. Leading and trailing spaces will be ignored.').replace('%1',passwordMinLength)
return result}
if(pass.match(/\d+/)){counter++}
if(pass.match(/[a-z]+/)){counter++}
if(pass.match(/[A-Z]+/)){counter++}
if(pass.match(/[^a-zA-Z0-9]+/)){counter++}
if(counter<passwordMinCharacterSets){result=false
validator.passwordErrorMessage=$t('Minimum of different classes of characters in password is %1. Classes of characters: Lower Case, Upper Case, Digits, Special Characters.').replace('%1',passwordMinCharacterSets)}
return result},function(){return this.passwordErrorMessage}],'validate-passport-seria':[function(v){var count=0
if(v.match(/[ÏïА-Яа-яіІїЇґҐєЄэЭъЪыЫёЁ]/gi)){count+=v.match(/[ÏïА-Яа-яіІїЇґҐєЄэЭъЪыЫёЁ]/gi).length}
return count===2},function(){return $t('Please enter exactly 2 ukraine letters')}],'validate-digits-length':[function(value,elem){return/^\d+$/.test(value)&&value.length===Number($(elem).data('length'))},function(value,elem){return $t('Please enter exactly {0} digits.').replace('{0}',$(elem).data('length'))}],'validate-mask':[function(value){return!/_/i.test(value)},function(){return $t('This is a required field.')}],'validate-document-date':[function(v){var regex,date,currentDate=new Date()
regex=/^(\d{2})\.(\d{2})\.(\d{4})$/
if($.mage.isEmpty(v)||!regex.test(v)){return false}
date=new Date(v.replace(regex,'$2/$1/$3'))
return date.getTime()<=currentDate.getTime()},$t('Please enter a valid date.')],'validate-organisation':[function(value,elem){return!/^\d+$/.test(value)&&value.length>=Number($(elem).data('length'))},function(value,elem){return $t('Please enter more than {0} symbols.').replace('{0}',$(elem).data('length'))}],max_text_length:[function(value,params){return!(_.isUndefined(value)||_.isNull(value))&&value.length<=+params},$.mage.__('Please enter less or equal than {0} symbols.')],nowhitespace:[function(value){return value.match(/\s/g)?value.replace(/\s/g,'').length>0:true},$t('This is a required field.')],'phone-mask':[function(value){return!value.match(/\+380 \(0/g)},$t('Please, check your phone number'),]}
$.each(rules,function(i,rule){rule.unshift(i)
$.validator.addMethod.apply($.validator,rule)})}})